const FIRST_PWD = process.env.FIRST_PWD;
const ROUND = Number(process.env.HASH_ROUND);
const SECRET_KEY = process.env.SECRET_KEY;
const ACCESS_TOKEN_EXPIRES = process.env.ACCESS_TOKEN_EXPIRES;
const REFRESH_TOKEN_EXPIRES = process.env.REFRESH_TOKEN_EXPIRES;
const ERROR_MESSAGE = {
    badRequest: {
        success: false,
        status: 400,
        message: "Bad Request",
    },
    likeAddError: {
        success: false,
        status: 400,
        message: "Already Add Like",
    },
    likeCancelError: {
        success: false,
        status: 400,
        message: "No Like",
    },
    unauthorized: {
        success: false,
        status: 401,
        message: "Unauthorized",
    },
    invalidToken: {
        success: false,
        status: 401,
        message: "Invalid token",
    },
    notExpired: {
        success: false,
        status: 401,
        message: "Token Not Expired",
    },
    forbidden: {
        success: false,
        status: 403,
        message: "Forbidden",
    },
    alreadySignup: {
        success: false,
        status: 403,
        message: "Already Sign Up",
    },
    notFound: {
        success: false,
        status: 404,
        message: "Not Found",
    },
    preconditionFailed: {
        success: false,
        status: 412,
        message: "Precondition Failed",
    },
    serverError: {
        success: false,
        status: 500,
        message: "Internal Server Error",
    },
};
const SUCCESS_MESSAGE = {
    loginOk: {
        success: true,
        status: 201,
        message: "Login Ok!",
    },
    logoutOk: {
        success: true,
        status: 205,
        message: "Logout success!",
    },
    refreshToken: {
        success: true,
        status: 201,
        message: "refresh success",
    },
    accessTokenOk: {
        success: true,
        status: 200,
        message: "access token ok",
    },
    registerOk: {
        status: 201,
        success: true,
        message: "register success!",
    },
};
const CATEGORY_TYPE = {
    ALL: "all",
    MY: "my",
};
export { FIRST_PWD, ROUND, SECRET_KEY, ACCESS_TOKEN_EXPIRES, REFRESH_TOKEN_EXPIRES, ERROR_MESSAGE, SUCCESS_MESSAGE, CATEGORY_TYPE, };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xpYi9jb25zdGFudHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxTQUFTLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUM7QUFDeEMsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0MsTUFBTSxVQUFVLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFvQixDQUFDO0FBQ3BELE1BQU0sb0JBQW9CLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxvQkFBb0IsQ0FBQztBQUM5RCxNQUFNLHFCQUFxQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMscUJBQXFCLENBQUM7QUFFaEUsTUFBTSxhQUFhLEdBQUc7SUFDcEIsVUFBVSxFQUFFO1FBQ1YsT0FBTyxFQUFFLEtBQUs7UUFDZCxNQUFNLEVBQUUsR0FBRztRQUNYLE9BQU8sRUFBRSxhQUFhO0tBQ3ZCO0lBQ0QsWUFBWSxFQUFFO1FBQ1osT0FBTyxFQUFFLEtBQUs7UUFDZCxNQUFNLEVBQUUsR0FBRztRQUNYLE9BQU8sRUFBRSxrQkFBa0I7S0FDNUI7SUFDRCxlQUFlLEVBQUU7UUFDZixPQUFPLEVBQUUsS0FBSztRQUNkLE1BQU0sRUFBRSxHQUFHO1FBQ1gsT0FBTyxFQUFFLFNBQVM7S0FDbkI7SUFDRCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsS0FBSztRQUNkLE1BQU0sRUFBRSxHQUFHO1FBQ1gsT0FBTyxFQUFFLGNBQWM7S0FDeEI7SUFDRCxZQUFZLEVBQUU7UUFDWixPQUFPLEVBQUUsS0FBSztRQUNkLE1BQU0sRUFBRSxHQUFHO1FBQ1gsT0FBTyxFQUFFLGVBQWU7S0FDekI7SUFDRCxVQUFVLEVBQUU7UUFDVixPQUFPLEVBQUUsS0FBSztRQUNkLE1BQU0sRUFBRSxHQUFHO1FBQ1gsT0FBTyxFQUFFLG1CQUFtQjtLQUM3QjtJQUNELFNBQVMsRUFBRTtRQUNULE9BQU8sRUFBRSxLQUFLO1FBQ2QsTUFBTSxFQUFFLEdBQUc7UUFDWCxPQUFPLEVBQUUsV0FBVztLQUNyQjtJQUNELGFBQWEsRUFBRTtRQUNiLE9BQU8sRUFBRSxLQUFLO1FBQ2QsTUFBTSxFQUFFLEdBQUc7UUFDWCxPQUFPLEVBQUUsaUJBQWlCO0tBQzNCO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsT0FBTyxFQUFFLEtBQUs7UUFDZCxNQUFNLEVBQUUsR0FBRztRQUNYLE9BQU8sRUFBRSxXQUFXO0tBQ3JCO0lBQ0Qsa0JBQWtCLEVBQUU7UUFDbEIsT0FBTyxFQUFFLEtBQUs7UUFDZCxNQUFNLEVBQUUsR0FBRztRQUNYLE9BQU8sRUFBRSxxQkFBcUI7S0FDL0I7SUFDRCxXQUFXLEVBQUU7UUFDWCxPQUFPLEVBQUUsS0FBSztRQUNkLE1BQU0sRUFBRSxHQUFHO1FBQ1gsT0FBTyxFQUFFLHVCQUF1QjtLQUNqQztDQUNPLENBQUM7QUFFWCxNQUFNLGVBQWUsR0FBRztJQUN0QixPQUFPLEVBQUU7UUFDUCxPQUFPLEVBQUUsSUFBSTtRQUNiLE1BQU0sRUFBRSxHQUFHO1FBQ1gsT0FBTyxFQUFFLFdBQVc7S0FDckI7SUFDRCxRQUFRLEVBQUU7UUFDUixPQUFPLEVBQUUsSUFBSTtRQUNiLE1BQU0sRUFBRSxHQUFHO1FBQ1gsT0FBTyxFQUFFLGlCQUFpQjtLQUMzQjtJQUNELFlBQVksRUFBRTtRQUNaLE9BQU8sRUFBRSxJQUFJO1FBQ2IsTUFBTSxFQUFFLEdBQUc7UUFDWCxPQUFPLEVBQUUsaUJBQWlCO0tBQzNCO0lBQ0QsYUFBYSxFQUFFO1FBQ2IsT0FBTyxFQUFFLElBQUk7UUFDYixNQUFNLEVBQUUsR0FBRztRQUNYLE9BQU8sRUFBRSxpQkFBaUI7S0FDM0I7SUFDRCxVQUFVLEVBQUU7UUFDVixNQUFNLEVBQUUsR0FBRztRQUNYLE9BQU8sRUFBRSxJQUFJO1FBQ2IsT0FBTyxFQUFFLG1CQUFtQjtLQUM3QjtDQUNPLENBQUM7QUFFWCxNQUFNLGFBQWEsR0FBRztJQUNwQixHQUFHLEVBQUUsS0FBSztJQUNWLEVBQUUsRUFBRSxJQUFJO0NBQ0EsQ0FBQztBQUVYLE9BQU8sRUFDTCxTQUFTLEVBQ1QsS0FBSyxFQUNMLFVBQVUsRUFDVixvQkFBb0IsRUFDcEIscUJBQXFCLEVBQ3JCLGFBQWEsRUFDYixlQUFlLEVBQ2YsYUFBYSxHQUNkLENBQUMifQ==